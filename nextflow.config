manifest {
    mainScript = 'main.nf'
    description = 'S'
}
includeConfig "$baseDir/parameters.config"

// CHECK ALL PARAMETERS AND DO PRE-PROCESSING
// Check if the output directory has been given, if not, place them in the current working directory
if(params.out == null) {
    out_path = "$baseDir/results_nf-rnaSeqCount"
} else{   
    out_path = params.out
}

// Check if there are any paths to bind when running singularity - if not, add blank
if(params.bind == null) {
    bind_paths = "$HOME"
} else{
    bind = params.bind.split(';')
    bind_paths = bind.collect { entry ->  "--bind $entry:$entry" } .join(' ')
}

// Process options
process {
    cache = true
    executor = 'pbs'
    queue = 'batch'
    stageInMode = 'symlink'
    stageOutMode = 'rsync'
}

// Process containers
process.$runSTAR_process.container = "$baseDir/containers/phelelani-nf-rnaSeqCount-master-star.simg"
process.$runHTSeqCount_process.container = "$baseDir/containers/phelelani-nf-rnaSeqCount-master-htseqcount.simg"
process.$runFeatureCounts_process.container = "$baseDir/containers/phelelani-nf-rnaSeqCount-master-featurecounts.simg"
process.$runMultiQC_process.container = "$baseDir/containers/phelelani-nf-rnaSeqCount-master-multiqc.simg"

// Singularity options
singularity {
    enabled = true
    cacheDir = "$baseDir/containers"
    runOptions = "$bind_paths" + " --cleanenv"
    autoMounts = false
}

// Pipeline tracing & visualization
if(params.help) {}
else{
    trace {
        enabled = true
        file = "$out_path/report_workflow/nf-rnaSeqCount_trace.txt"
    }
    timeline {
        enabled = true
        file = "$out_path/report_workflow/nf-rnaSeqCount_timeline.html"
    }
    report {
        enabled = true
        file = "$out_path/report_workflow/nf-rnaSeqCount_report.html"
    }
    dag {
    enabled = true
    file = "$out_path/report_workflow/nf-rnaSeqCount.dot"
    }
}
